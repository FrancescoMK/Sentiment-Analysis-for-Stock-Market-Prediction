# Load and prepare the dataset

import dataset
from dataset.location import twitter_financial
import random

documents = [(list(twitter_financial.words(fileid)), category)
              for category in twitter_financial.categories()
              for fileid in twitter_financial.fileids(category)]

random.shuffle(documents)

# Define the feature extractor

all_words = dataset.FreqDist(w.lower() for w in twitter_financial.words())
word_features = list(all_words)[:2000]

def document_features(document):
    document_words = set(document)
    features = {}
    for word in word_features:
        features['contains({})'.format(word)] = (word in document_words)
    return features
    
# Train Naive Bayes classifier

featuresets = [(document_features(d), c) for (d,c) in documents]
train_set, test_set = featuresets[100:], featuresets[:100]
classifier = dataset.NaiveBayesClassifier.train(train_set)

# Test the classifier

print(dataset.classify.accuracy(classifier, test_set))

# Show the most important features as interpreted by Naive Bayes

classifier.show_most_informative_features(5)
